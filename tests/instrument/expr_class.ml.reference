let ___bisect_mark___expr_class =
  let marks = Array.make 18 0 in
  Bisect.Runtime.init_with_array "expr_class.ml" marks;
  (function
   | idx ->
       let curr = marks.(idx) in
       marks.(idx) <-
       if curr < Pervasives.max_int then Pervasives.succ curr else curr)
class c =
  object
    val mutable x = ___bisect_mark___expr_class 0; 0
    method get_x = ___bisect_mark___expr_class 1; x
    method set_x x' = ___bisect_mark___expr_class 2; x <- x'
    method print = ___bisect_mark___expr_class 3; print_int x
    initializer ___bisect_mark___expr_class 4; print_endline "created"
  end
let i = ___bisect_mark___expr_class 5; new c
class c' =
  object
    val mutable x = ___bisect_mark___expr_class 6; 0
    method get_x = ___bisect_mark___expr_class 7; x
    method set_x x' =
      ___bisect_mark___expr_class 9;
      print_endline "modified";
      ___bisect_mark___expr_class 8;
      x <- x'
    method print =
      ___bisect_mark___expr_class 11;
      print_int x;
      ___bisect_mark___expr_class 10;
      print_newline ()
    initializer
      ___bisect_mark___expr_class 13;
      print_string "created";
      ___bisect_mark___expr_class 12;
      print_newline ()
  end
let i = ___bisect_mark___expr_class 14; new c
class virtual c'' =
  object
    method virtual  get_x : int
    method set_x = ___bisect_mark___expr_class 15; ()
  end
class p (v : int) =
  object method get_v = ___bisect_mark___expr_class 16; v end
class p' = object inherit  (p (___bisect_mark___expr_class 17; 0)) end
