let ___bisect_mark___expr_try =
  let marks = Array.make 12 0 in
  Bisect.Runtime.init_with_array "expr_try.ml" marks;
  (function
   | idx ->
       let curr = marks.(idx) in
       marks.(idx) <-
       if curr < Pervasives.max_int then Pervasives.succ curr else curr)
let () =
  (___bisect_mark___expr_try 6; print_endline "before");
  (___bisect_mark___expr_try 5;
   (try
      (___bisect_mark___expr_try 3; print_endline "abc");
      ___bisect_mark___expr_try 2;
      print_endline "def"
    with
    | _ ->
        ((___bisect_mark___expr_try 1; print_endline "ABC");
         ___bisect_mark___expr_try 0;
         print_endline "DEF")));
  ___bisect_mark___expr_try 4;
  print_endline "after"
let () =
  (___bisect_mark___expr_try 11; print_endline "before");
  (___bisect_mark___expr_try 10;
   (try ___bisect_mark___expr_try 8; print_endline "abc"
    with | _ -> (___bisect_mark___expr_try 7; print_endline "ABC")));
  ___bisect_mark___expr_try 9;
  print_endline "after"
