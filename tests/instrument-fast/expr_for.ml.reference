let ___bisect_mark___expr_for =
  let marks = Array.make 10 0
  and (hook_before,hook_after) = Bisect.Runtime.get_hooks () in
  Bisect.Runtime.init_with_array "expr_for.ml" marks true;
  (function
   | idx ->
       ((hook_before ();
         (let curr = marks.(idx) in
          marks.(idx) <-
          if curr < Pervasives.max_int then Pervasives.succ curr else curr));
        hook_after ()))
let () =
  (___bisect_mark___expr_for 5; print_endline "before");
  (___bisect_mark___expr_for 4;
   for i = 1 to 3 do
     ((___bisect_mark___expr_for 2; print_endline "abc");
      (___bisect_mark___expr_for 1; print_endline "def");
      ___bisect_mark___expr_for 0;
      print_endline "ghi")
   done);
  ___bisect_mark___expr_for 3;
  print_endline "after"
let () =
  (___bisect_mark___expr_for 9; print_endline "before");
  (___bisect_mark___expr_for 8;
   for i = 1 to 3 do (___bisect_mark___expr_for 6; print_endline "abc") done);
  ___bisect_mark___expr_for 7;
  print_endline "after"
