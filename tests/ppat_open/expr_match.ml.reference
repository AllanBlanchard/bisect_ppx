let ___bisect_mark___expr_match =
  let points =
"\132\149\166\190\000\000\000y\000\000\000\025\000\000\000a\000\000\000a\b\000\000`\000\160\000WW\160\000_U\160\000jV\160\000|S\160\001\000\130T\160\001\000\153R\160\001\000\161P\160\001\000\174Q\160\001\000\189L\160\001\000\193M\160\001\000\199N\160\001\000\221O\160\001\000\242K\160\001\000\250I\160\001\001\tJ\160\001\001\029F\160\001\001#G\160\001\001;H\160\001\001PE\160\001\001XC\160\001\001nD\160\001\001\132@\160\001\001\136A\160\001\001\160B"
     in
  let marks = Array.make 24 0 in
  Bisect.Runtime.init_with_array "expr_match.ml" marks points;
  (function
   | idx ->
       let curr = marks.(idx)  in
       marks.(idx) <-
         (if curr < Pervasives.max_int then Pervasives.succ curr else curr))

module M = struct type t =
                    | Foo
                    | Bar
                  type r = {
                    i: int ;
                    t: t } end

let f () =
  ___bisect_mark___expr_match 23;
  (let s = ___bisect_mark___expr_match 21; M.Bar  in
   ___bisect_mark___expr_match 22;
   (match s with
    | M.((Foo |Bar ))  as ___bisect_matched_value___ ->
        ((((match ___bisect_matched_value___ with
            | M.(Foo )  -> (___bisect_mark___expr_match 19; ())
            | M.(Bar )  -> (___bisect_mark___expr_match 20; ())
            | _ -> ()))
         [@ocaml.warning "-4-8-9-11-26-27-28"]);
         assert true;
         ___bisect_mark___expr_match 18;
         (let l = ___bisect_mark___expr_match 16; (let open M in [Foo])  in
          ___bisect_mark___expr_match 17;
          (match l with
           | M.((Foo |Bar )::[])  as ___bisect_matched_value___ ->
               ((((match ___bisect_matched_value___ with
                   | M.((Foo )::[])  ->
                       (___bisect_mark___expr_match 13;
                        ___bisect_mark___expr_match 12;
                        ())
                   | M.((Bar )::[])  ->
                       (___bisect_mark___expr_match 14;
                        ___bisect_mark___expr_match 12;
                        ())
                   | _ -> ()))
                [@ocaml.warning "-4-8-9-11-26-27-28"]);
                assert true)
           | _ ->
               (___bisect_mark___expr_match 15;
                assert false;
                ___bisect_mark___expr_match 11;
                (let a =
                   ___bisect_mark___expr_match 9; (let open M in [|Bar|])  in
                 ___bisect_mark___expr_match 10;
                 (match a with
                  | M.[|(Foo |Bar )|]  as ___bisect_matched_value___ ->
                      ((((match ___bisect_matched_value___ with
                          | M.[|Foo |]  ->
                              (___bisect_mark___expr_match 6; ())
                          | M.[|Bar |]  ->
                              (___bisect_mark___expr_match 7; ())
                          | _ -> ()))
                       [@ocaml.warning "-4-8-9-11-26-27-28"]);
                       assert true)
                  | _ ->
                      (___bisect_mark___expr_match 8;
                       assert false;
                       ___bisect_mark___expr_match 5;
                       (let r =
                          ___bisect_mark___expr_match 3;
                          (let open M in { i = 3; t = Foo })  in
                        ___bisect_mark___expr_match 4;
                        (match r with
                         | M.{ i = (3|4);_}  as ___bisect_matched_value___ ->
                             ((((match ___bisect_matched_value___ with
                                 | M.{ i = 3;_}  ->
                                     (___bisect_mark___expr_match 0; ())
                                 | M.{ i = 4;_}  ->
                                     (___bisect_mark___expr_match 1; ())
                                 | _ -> ()))
                              [@ocaml.warning "-4-8-9-11-26-27-28"]);
                              assert true)
                         | _ -> (___bisect_mark___expr_match 2; assert false))))))))))))
